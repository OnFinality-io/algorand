#apiVersion: v1
#kind: Service
#metadata:
#  name: {{.Release.Name}}-postgres-state-service-{{.Values.algorand.network}}
#  labels:
#    app: nginx
#spec:
#  ports:
#  - port: 80
#    name: {{.Release.Name}}-postgres-state-service-{{.Values.algorand.network}}
#  clusterIP: None
#  selector:
#    app: nginx
#---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    network: {{.Values.algorand.network}}
    release: {{.Release.Name}}
  name: {{.Release.Name}}-postgres-{{.Values.algorand.network}}
spec:
  selector:
    matchLabels:
      app: algo-postgres
      network: {{.Values.algorand.network}}
      release: {{.Release.Name}}
  serviceName: {{.Release.Name}}-postgres-{{.Values.algorand.network}}
  replicas: 1 # by default is 1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: algo-postgres
        network: {{.Values.algorand.network}}
        release: {{.Release.Name}}
      name: algo-postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB_FILE
          value: /var/run/secrets/postgres_db
        - name: POSTGRES_LOGGING
          value: "true"
        - name: POSTGRES_PASSWORD_FILE
          value: /var/run/secrets/postgres_password
        - name: POSTGRES_USER_FILE
          value: /var/run/secrets/postgres_user
        image: postgres:11.5-alpine
        name: algo-postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/run/secrets
          name: {{.Release.Name}}-postgres-secrets
          readOnly: true
        - mountPath: /var/lib/postgresql
          name: algo-postgres-claim
      volumes:
      - name: {{.Release.Name}}-postgres-secrets
        secret:
          items:
          - key: postgres_password
            path: postgres_password
          - key: postgres_user
            path: postgres_user
          - key: postgres_db
            path: postgres_db
          secretName: {{.Release.Name}}-postgres-secrets
      - name: algo-postgres-claim
        persistentVolumeClaim:
          claimName: algo-postgres-claim
  volumeClaimTemplates:
  - metadata:
      name: algo-postgres-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName:
      resources:
        requests:
          storage: {{.Values.postgresStorage}}